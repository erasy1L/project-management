basePath: /api/v1
definitions:
  project.Request:
    properties:
      description:
        type: string
      finished_at:
        type: string
      manager_id:
        type: string
      started_at:
        type: string
      title:
        type: string
    type: object
  project.Response:
    properties:
      description:
        type: string
      finished_at:
        type: string
      id:
        type: string
      manager_id:
        type: string
      started_at:
        type: string
      title:
        type: string
    type: object
  project.UpdateRequest:
    properties:
      description:
        type: string
      finished_at:
        type: string
      manager_id:
        type: string
      title:
        type: string
    type: object
  task.Request:
    properties:
      author_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      done_at:
        type: string
      priority:
        type: string
      project_id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  task.Response:
    properties:
      author_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      done_at:
        type: string
      id:
        type: string
      priority:
        type: string
      project_id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  task.UpdateRequest:
    properties:
      author_id:
        type: string
      description:
        type: string
      done_at:
        type: string
      priority:
        type: string
      project_id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  user.Request:
    properties:
      email:
        type: string
      name:
        type: string
      registration_date:
        type: string
      role:
        type: string
    type: object
  user.Response:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      registration_date:
        type: string
      role:
        type: string
    type: object
  user.UpdateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple project management API
  title: Project Management API
  version: "1"
paths:
  /projects:
    get:
      description: List projects
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.Response'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
      summary: List projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a project
      parameters:
      - description: Project request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/project.Request'
      responses:
        "201":
          description: Project ID
          schema:
            type: string
        "400":
          description: Validation errors
          schema:
            items:
              type: string
            type: array
      summary: Create a project
      tags:
      - projects
  /projects/{id}:
    delete:
      description: Delete a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Project deleted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
      summary: Delete a project
      tags:
      - projects
    get:
      description: Get a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.Response'
        "400":
          description: Bad request
          schema:
            type: string
      summary: Get a project
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project update request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/project.UpdateRequest'
      responses:
        "200":
          description: Project updated
          schema:
            type: string
        "400":
          description: Validation errors
          schema:
            items:
              type: string
            type: array
      summary: Update a project
      tags:
      - projects
  /projects/{id}/tasks:
    get:
      description: List project tasks
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
      summary: List project tasks
      tags:
      - projects
  /projects/search:
    get:
      description: Search projects
      parameters:
      - description: Query
        in: query
        name: query
        required: true
        type: string
      - description: Value
        in: query
        name: val
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.Response'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
      summary: Search projects
      tags:
      - projects
  /tasks:
    get:
      description: List tasks
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
      summary: List tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a task
      parameters:
      - description: Task request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/task.Request'
      responses:
        "201":
          description: Task ID
          schema:
            type: string
        "400":
          description: Validation errors
          schema:
            items:
              type: string
            type: array
      summary: Create a task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Delete a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Task deleted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.Response'
        "400":
          description: Bad request
          schema:
            type: string
      summary: Get a task
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task update request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/task.UpdateRequest'
      responses:
        "200":
          description: Task updated
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
      summary: Update a task
      tags:
      - tasks
  /tasks/search:
    get:
      description: Search tasks
      parameters:
      - description: Query
        in: query
        name: query
        required: true
        type: string
      - description: Value
        in: query
        name: value
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
      summary: Search tasks
      tags:
      - tasks
  /users:
    get:
      consumes:
      - application/json
      description: List users
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: User request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      responses:
        "201":
          description: User ID
          schema:
            type: string
        "400":
          description: Validation errors
          schema:
            items:
              type: string
            type: array
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: User deleted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.UpdateRequest'
      responses:
        "200":
          description: User ID
          schema:
            type: string
        "400":
          description: Validation errors
          schema:
            items:
              type: string
            type: array
        "404":
          description: User not found
          schema:
            type: string
      summary: Update a user
      tags:
      - users
  /users/{id}/tasks:
    get:
      consumes:
      - application/json
      description: List user tasks
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Response'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: List user tasks
      tags:
      - users
  /users/search:
    get:
      consumes:
      - application/json
      description: Search users
      parameters:
      - description: Query
        in: query
        name: query
        required: true
        type: string
      - description: Value
        in: query
        name: value
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.Response'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
      summary: Search users
      tags:
      - users
swagger: "2.0"
